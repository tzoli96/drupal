import {
  AttributeCommand,
  getButtonCreator
} from "./chunk-PX6SUTZ4.js";
import {
  MenuBarMenuListItemButtonView
} from "./chunk-6E3JQ6U6.js";
import {
  ButtonView
} from "./chunk-OWJNOFJW.js";
import {
  Plugin
} from "./chunk-SDF6D7WI.js";
import "./chunk-3X5M7Q3U.js";
import "./chunk-2KI6HXVW.js";
import "./chunk-K6UGUURS.js";

// node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js
var ITALIC = "italic";
var ItalicEditing = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "ItalicEditing";
  }
  /**
   * @inheritDoc
   */
  static get isOfficialPlugin() {
    return true;
  }
  /**
   * @inheritDoc
   */
  init() {
    const editor = this.editor;
    const t = this.editor.t;
    editor.model.schema.extend("$text", { allowAttributes: ITALIC });
    editor.model.schema.setAttributeProperties(ITALIC, {
      isFormatting: true,
      copyOnEnter: true
    });
    editor.conversion.attributeToElement({
      model: ITALIC,
      view: "i",
      upcastAlso: [
        "em",
        {
          styles: {
            "font-style": "italic"
          }
        }
      ]
    });
    editor.commands.add(ITALIC, new AttributeCommand(editor, ITALIC));
    editor.keystrokes.set("CTRL+I", ITALIC);
    editor.accessibility.addKeystrokeInfos({
      keystrokes: [
        {
          label: t("Italic text"),
          keystroke: "CTRL+I"
        }
      ]
    });
  }
};

// node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js
import italicIcon from "/home/wsl/code/cash/drupal/ckeditor5/node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg";
var ITALIC2 = "italic";
var ItalicUI = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "ItalicUI";
  }
  /**
   * @inheritDoc
   */
  static get isOfficialPlugin() {
    return true;
  }
  /**
   * @inheritDoc
   */
  init() {
    const editor = this.editor;
    const t = editor.locale.t;
    const createButton = getButtonCreator({
      editor,
      commandName: ITALIC2,
      plugin: this,
      icon: italicIcon,
      keystroke: "CTRL+I",
      label: t("Italic")
    });
    editor.ui.componentFactory.add(ITALIC2, () => createButton(ButtonView));
    editor.ui.componentFactory.add("menuBar:" + ITALIC2, () => createButton(MenuBarMenuListItemButtonView));
  }
};

// node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js
var Italic = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get requires() {
    return [ItalicEditing, ItalicUI];
  }
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "Italic";
  }
  /**
   * @inheritDoc
   */
  static get isOfficialPlugin() {
    return true;
  }
};
export {
  Italic as default
};
/*! Bundled license information:

@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js:
  (**
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)

@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js:
  (**
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)

@ckeditor/ckeditor5-basic-styles/src/italic.js:
  (**
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)
*/
//# sourceMappingURL=@ckeditor_ckeditor5-basic-styles_src_italic.js.map
