import {
  AttributeCommand,
  getButtonCreator
} from "./chunk-PX6SUTZ4.js";
import {
  MenuBarMenuListItemButtonView,
  icons
} from "./chunk-6E3JQ6U6.js";
import {
  ButtonView
} from "./chunk-OWJNOFJW.js";
import {
  Plugin
} from "./chunk-SDF6D7WI.js";
import "./chunk-3X5M7Q3U.js";
import "./chunk-2KI6HXVW.js";
import "./chunk-K6UGUURS.js";

// node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js
var BOLD = "bold";
var BoldEditing = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "BoldEditing";
  }
  /**
   * @inheritDoc
   */
  static get isOfficialPlugin() {
    return true;
  }
  /**
   * @inheritDoc
   */
  init() {
    const editor = this.editor;
    const t = this.editor.t;
    editor.model.schema.extend("$text", { allowAttributes: BOLD });
    editor.model.schema.setAttributeProperties(BOLD, {
      isFormatting: true,
      copyOnEnter: true
    });
    editor.conversion.attributeToElement({
      model: BOLD,
      view: "strong",
      upcastAlso: [
        "b",
        (viewElement) => {
          const fontWeight = viewElement.getStyle("font-weight");
          if (!fontWeight) {
            return null;
          }
          if (fontWeight == "bold" || Number(fontWeight) >= 600) {
            return {
              name: true,
              styles: ["font-weight"]
            };
          }
          return null;
        }
      ]
    });
    editor.commands.add(BOLD, new AttributeCommand(editor, BOLD));
    editor.keystrokes.set("CTRL+B", BOLD);
    editor.accessibility.addKeystrokeInfos({
      keystrokes: [
        {
          label: t("Bold text"),
          keystroke: "CTRL+B"
        }
      ]
    });
  }
};

// node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js
var BOLD2 = "bold";
var BoldUI = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "BoldUI";
  }
  /**
   * @inheritDoc
   */
  static get isOfficialPlugin() {
    return true;
  }
  /**
   * @inheritDoc
   */
  init() {
    const editor = this.editor;
    const t = editor.locale.t;
    const createButton = getButtonCreator({
      editor,
      commandName: BOLD2,
      plugin: this,
      icon: icons.bold,
      label: t("Bold"),
      keystroke: "CTRL+B"
    });
    editor.ui.componentFactory.add(BOLD2, () => createButton(ButtonView));
    editor.ui.componentFactory.add("menuBar:" + BOLD2, () => createButton(MenuBarMenuListItemButtonView));
  }
};

// node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js
var Bold = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get requires() {
    return [BoldEditing, BoldUI];
  }
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "Bold";
  }
  /**
   * @inheritDoc
   */
  static get isOfficialPlugin() {
    return true;
  }
};
export {
  Bold as default
};
/*! Bundled license information:

@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js:
  (**
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)

@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js:
  (**
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)

@ckeditor/ckeditor5-basic-styles/src/bold.js:
  (**
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)
*/
//# sourceMappingURL=@ckeditor_ckeditor5-basic-styles_src_bold.js.map
