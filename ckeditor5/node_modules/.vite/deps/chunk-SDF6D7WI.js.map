{
  "version": 3,
  "sources": ["../../@ckeditor/ckeditor5-core/src/plugin.js"],
  "sourcesContent": ["/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module core/plugin\n */\n/* eslint-disable @typescript-eslint/no-invalid-void-type */\nimport { ObservableMixin } from '@ckeditor/ckeditor5-utils';\n/**\n * The base class for CKEditor plugin classes.\n */\nexport default class Plugin extends /* #__PURE__ */ ObservableMixin() {\n    /**\n     * @inheritDoc\n     */\n    constructor(editor) {\n        super();\n        /**\n         * Holds identifiers for {@link #forceDisabled} mechanism.\n         */\n        this._disableStack = new Set();\n        this.editor = editor;\n        this.set('isEnabled', true);\n    }\n    /**\n     * Disables the plugin.\n     *\n     * Plugin may be disabled by multiple features or algorithms (at once). When disabling a plugin, unique id should be passed\n     * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the plugin.\n     * The plugin becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n     *\n     * Disabling and enabling a plugin:\n     *\n     * ```ts\n     * plugin.isEnabled; // -> true\n     * plugin.forceDisabled( 'MyFeature' );\n     * plugin.isEnabled; // -> false\n     * plugin.clearForceDisabled( 'MyFeature' );\n     * plugin.isEnabled; // -> true\n     * ```\n     *\n     * Plugin disabled by multiple features:\n     *\n     * ```ts\n     * plugin.forceDisabled( 'MyFeature' );\n     * plugin.forceDisabled( 'OtherFeature' );\n     * plugin.clearForceDisabled( 'MyFeature' );\n     * plugin.isEnabled; // -> false\n     * plugin.clearForceDisabled( 'OtherFeature' );\n     * plugin.isEnabled; // -> true\n     * ```\n     *\n     * Multiple disabling with the same identifier is redundant:\n     *\n     * ```ts\n     * plugin.forceDisabled( 'MyFeature' );\n     * plugin.forceDisabled( 'MyFeature' );\n     * plugin.clearForceDisabled( 'MyFeature' );\n     * plugin.isEnabled; // -> true\n     * ```\n     *\n     * **Note:** some plugins or algorithms may have more complex logic when it comes to enabling or disabling certain plugins,\n     * so the plugin might be still disabled after {@link #clearForceDisabled} was used.\n     *\n     * @param id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the plugin.\n     */\n    forceDisabled(id) {\n        this._disableStack.add(id);\n        if (this._disableStack.size == 1) {\n            this.on('set:isEnabled', forceDisable, { priority: 'highest' });\n            this.isEnabled = false;\n        }\n    }\n    /**\n     * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n     *\n     * @param id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n     */\n    clearForceDisabled(id) {\n        this._disableStack.delete(id);\n        if (this._disableStack.size == 0) {\n            this.off('set:isEnabled', forceDisable);\n            this.isEnabled = true;\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    destroy() {\n        this.stopListening();\n    }\n    /**\n     * @inheritDoc\n     */\n    static get isContextPlugin() {\n        return false;\n    }\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    static get isOfficialPlugin() {\n        return false;\n    }\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    static get isPremiumPlugin() {\n        return false;\n    }\n}\n/**\n * Helper function that forces plugin to be disabled.\n */\nfunction forceDisable(evt) {\n    evt.return = false;\n    evt.stop();\n}\n"],
  "mappings": ";;;;;AAYA,IAAqB,SAArB,cAAoD,gBAAgB,EAAE;AAAA;AAAA;AAAA;AAAA,EAIlE,YAAY,QAAQ;AAChB,UAAM;AAIN,SAAK,gBAAgB,oBAAI,IAAI;AAC7B,SAAK,SAAS;AACd,SAAK,IAAI,aAAa,IAAI;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2CA,cAAc,IAAI;AACd,SAAK,cAAc,IAAI,EAAE;AACzB,QAAI,KAAK,cAAc,QAAQ,GAAG;AAC9B,WAAK,GAAG,iBAAiB,cAAc,EAAE,UAAU,UAAU,CAAC;AAC9D,WAAK,YAAY;AAAA,IACrB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB,IAAI;AACnB,SAAK,cAAc,OAAO,EAAE;AAC5B,QAAI,KAAK,cAAc,QAAQ,GAAG;AAC9B,WAAK,IAAI,iBAAiB,YAAY;AACtC,WAAK,YAAY;AAAA,IACrB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACN,SAAK,cAAc;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,kBAAkB;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,mBAAmB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,kBAAkB;AACzB,WAAO;AAAA,EACX;AACJ;AAIA,SAAS,aAAa,KAAK;AACvB,MAAI,SAAS;AACb,MAAI,KAAK;AACb;",
  "names": []
}
