{
  "version": 3,
  "sources": ["../../@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js", "../../@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js", "../../@ckeditor/ckeditor5-basic-styles/src/bold.js"],
  "sourcesContent": ["/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/bold/boldediting\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport AttributeCommand from '../attributecommand.js';\nconst BOLD = 'bold';\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n */\nexport default class BoldEditing extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'BoldEditing';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        const t = this.editor.t;\n        // Allow bold attribute on text nodes.\n        editor.model.schema.extend('$text', { allowAttributes: BOLD });\n        editor.model.schema.setAttributeProperties(BOLD, {\n            isFormatting: true,\n            copyOnEnter: true\n        });\n        // Build converter from model to view for data and editing pipelines.\n        editor.conversion.attributeToElement({\n            model: BOLD,\n            view: 'strong',\n            upcastAlso: [\n                'b',\n                viewElement => {\n                    const fontWeight = viewElement.getStyle('font-weight');\n                    if (!fontWeight) {\n                        return null;\n                    }\n                    // Value of the `font-weight` attribute can be defined as a string or a number.\n                    if (fontWeight == 'bold' || Number(fontWeight) >= 600) {\n                        return {\n                            name: true,\n                            styles: ['font-weight']\n                        };\n                    }\n                    return null;\n                }\n            ]\n        });\n        // Create bold command.\n        editor.commands.add(BOLD, new AttributeCommand(editor, BOLD));\n        // Set the Ctrl+B keystroke.\n        editor.keystrokes.set('CTRL+B', BOLD);\n        // Add the information about the keystroke to the accessibility database.\n        editor.accessibility.addKeystrokeInfos({\n            keystrokes: [\n                {\n                    label: t('Bold text'),\n                    keystroke: 'CTRL+B'\n                }\n            ]\n        });\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/bold/boldui\n */\nimport { Plugin, icons } from 'ckeditor5/src/core.js';\nimport { ButtonView, MenuBarMenuListItemButtonView } from 'ckeditor5/src/ui.js';\nimport { getButtonCreator } from '../utils.js';\nconst BOLD = 'bold';\n/**\n * The bold UI feature. It introduces the Bold button.\n */\nexport default class BoldUI extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'BoldUI';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        const t = editor.locale.t;\n        const createButton = getButtonCreator({\n            editor,\n            commandName: BOLD,\n            plugin: this,\n            icon: icons.bold,\n            label: t('Bold'),\n            keystroke: 'CTRL+B'\n        });\n        // Add bold button to feature components.\n        editor.ui.componentFactory.add(BOLD, () => createButton(ButtonView));\n        editor.ui.componentFactory.add('menuBar:' + BOLD, () => createButton(MenuBarMenuListItemButtonView));\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/bold\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport BoldEditing from './bold/boldediting.js';\nimport BoldUI from './bold/boldui.js';\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature} guide\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n */\nexport default class Bold extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [BoldEditing, BoldUI];\n    }\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'Bold';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get isOfficialPlugin() {\n        return true;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AASA,IAAM,OAAO;AAOb,IAAqB,cAArB,cAAyC,OAAO;AAAA;AAAA;AAAA;AAAA,EAI5C,WAAW,aAAa;AACpB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,mBAAmB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACH,UAAM,SAAS,KAAK;AACpB,UAAM,IAAI,KAAK,OAAO;AAEtB,WAAO,MAAM,OAAO,OAAO,SAAS,EAAE,iBAAiB,KAAK,CAAC;AAC7D,WAAO,MAAM,OAAO,uBAAuB,MAAM;AAAA,MAC7C,cAAc;AAAA,MACd,aAAa;AAAA,IACjB,CAAC;AAED,WAAO,WAAW,mBAAmB;AAAA,MACjC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,YAAY;AAAA,QACR;AAAA,QACA,iBAAe;AACX,gBAAM,aAAa,YAAY,SAAS,aAAa;AACrD,cAAI,CAAC,YAAY;AACb,mBAAO;AAAA,UACX;AAEA,cAAI,cAAc,UAAU,OAAO,UAAU,KAAK,KAAK;AACnD,mBAAO;AAAA,cACH,MAAM;AAAA,cACN,QAAQ,CAAC,aAAa;AAAA,YAC1B;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,WAAO,SAAS,IAAI,MAAM,IAAI,iBAAiB,QAAQ,IAAI,CAAC;AAE5D,WAAO,WAAW,IAAI,UAAU,IAAI;AAEpC,WAAO,cAAc,kBAAkB;AAAA,MACnC,YAAY;AAAA,QACR;AAAA,UACI,OAAO,EAAE,WAAW;AAAA,UACpB,WAAW;AAAA,QACf;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;;;ACnEA,IAAMA,QAAO;AAIb,IAAqB,SAArB,cAAoC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIvC,WAAW,aAAa;AACpB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,mBAAmB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACH,UAAM,SAAS,KAAK;AACpB,UAAM,IAAI,OAAO,OAAO;AACxB,UAAM,eAAe,iBAAiB;AAAA,MAClC;AAAA,MACA,aAAaA;AAAA,MACb,QAAQ;AAAA,MACR,MAAM,MAAM;AAAA,MACZ,OAAO,EAAE,MAAM;AAAA,MACf,WAAW;AAAA,IACf,CAAC;AAED,WAAO,GAAG,iBAAiB,IAAIA,OAAM,MAAM,aAAa,UAAU,CAAC;AACnE,WAAO,GAAG,iBAAiB,IAAI,aAAaA,OAAM,MAAM,aAAa,6BAA6B,CAAC;AAAA,EACvG;AACJ;;;AC1BA,IAAqB,OAArB,cAAkC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIrC,WAAW,WAAW;AAClB,WAAO,CAAC,aAAa,MAAM;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,aAAa;AACpB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,mBAAmB;AAC1B,WAAO;AAAA,EACX;AACJ;",
  "names": ["BOLD"]
}
